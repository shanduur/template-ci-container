name: Build, scan and release container image (alternative)

on:
  release:
    types: [released,prereleased]

env:
  REGISTRY: ghcr.io
  REPOSITORY: shanduur
  IMAGE_NAME: template-ci-container
  IMAGE_TAG: ${{ github.ref_name }}
  GIT_SHA: ${{ github.sha }}
  ROBOT_USERNAME: ${{ secrets.ROBOT_USERNAME }}
  ROBOT_PASSWORD: ${{ secrets.ROBOT_PASSWORD }}

jobs:
  build_scan_push:
    name: Build, scan and push container image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build AMD64 image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Containerfile
          platforms: linux/amd64
          provenance: false
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-amd64
          load: true

      - name: Run Trivy vulnerability scanner for AMD64
        uses: aquasecurity/trivy-action@master
        with:
          trivy-config: .trivy.yaml
          image-ref: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-amd64

      - name: Build ARM64 image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Containerfile
          platforms: linux/arm64
          provenance: false
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-arm64
          load: true

      - name: Run Trivy vulnerability scanner for ARM64
        uses: aquasecurity/trivy-action@master
        with:
          trivy-config: .trivy.yaml
          image-ref: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-arm64

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.ROBOT_USERNAME }}
          password: ${{ env.ROBOT_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Containerfile
          platforms: linux/amd64,linux/arm64
          provenance: false
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-alt

      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@v0.3.1
        with:
          inputs: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-alt
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-amd64,${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}-arm64
          push: true
